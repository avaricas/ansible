---
- name: 1 Initial Setup
  block:
    - name: 1.1 Filesystem Configuration
      block:
        - name: 1.1.1 Disable unused filesystems
          block:
            - name: 1.1.1.2 Ensure mounting of squashfs filesystems is disabled
              block:
                - name: 1.1.1.2 Ensure mounting of squashfs filesystems is disabled
                  ansible.builtin.lineinfile:
                    dest: "{{ cis_modprobe_conf_path }}"
                    regexp: "^#?.*install squashfs"
                    line: "install squashfs /bin/true"
                    create: true
              tags:
                - "1.1.1.2"
                - section-1
                - level-2

            - name: 1.1.11 Ensure separate partition exists for /var/tmp
              ansible.posix.mount:
                name: "{{ item.mountpoint }}"
                state: present
                fstype: "{{ item.fstype }}"
                src: "{{ item.device }}"
                opts: "{{ item.opts }}"
              with_items:
                - "{{ fs_mounts | selectattr('mountpoint', 'equalto', '/var/tmp') | list }}"
              tags:
                - "1.1.11"
                - section-1
                - level-2

            - name: 1.1.12 Ensure /var/tmp partition includes the noexec option
              block:
                - name: 1.1.12 Ensure /var/tmp partition includes the noexec option
                  ansible.builtin.shell: findmnt -n /var/tmp | grep -Ev '\bnoexec\b'
                  failed_when: audit_1_1_12_result.rc != 1 and audit_1_1_12_result.rc != 0
                  register: audit_1_1_12_result
                  changed_when: true

                - name: 1.1.12 Ensure /var/tmp partition includes the noexec option
                  ansible.builtin.debug:
                    msg: "{{ audit_1_1_12_result.stdout_lines }}"
                  tags:
                    - "1.1.12"
                    - section-1
                    - level-2

            - name: 1.1.13 Ensure /var/tmp partition includes the nodev option
              block:
                - name: 1.1.13 Ensure /var/tmp partition includes the nodev option
                  ansible.builtin.shell: findmnt -n /var/tmp | grep -Ev '\bnodev\b'
                  failed_when: audit_1_1_13_result.rc != 1 and audit_1_1_13_result.rc != 0
                  register: audit_1_1_13_result
                  changed_when: true

                - name: 1.1.13 Ensure /var/tmp partition includes the nodev option
                  ansible.builtin.debug:
                    msg: "{{ audit_1_1_13_result.stdout_lines }}"
                  tags:
                    - "1.1.13"
                    - section-1
                    - level-2

            - name: 1.1.13 Ensure /var/tmp partition includes the nodev option
              block:
                - name: 1.1.14 Ensure /var/tmp partition includes the nosuid option
                  ansible.builtin.shell: findmnt -n /var/tmp | grep -Ev '\bnosuid\b'
                  failed_when: audit_1_1_14_result.rc != 1 and audit_1_1_14_result.rc != 0
                  register: audit_1_1_14_result
                  changed_when: true

                - name: 1.1.14 Ensure /var/tmp partition includes the nosuid option
                  ansible.builtin.debug:
                    msg: "{{ audit_1_1_14_result.stdout_lines }}"
                  tags:
                    - "1.1.14"
                    - section-1
                    - level-2

            - name: 1.1.15 Ensure separate partition exists for /var/log
              block:
                - name: 1.1.15 Ensure separate partition exists for /var/log
                  ansible.builtin.command: findmnt /var/log
                  failed_when: audit_1_1_15_result.rc != 1 and audit_1_1_15_result.rc != 0
                  register: audit_1_1_15_result
                  changed_when: true

                - name: 1.1.15 Ensure separate partition exists for /var/log
                  ansible.builtin.debug:
                    msg: "'{{ audit_1_1_15_result.stdout_lines }}'"
              tags:
                - "1.1.15"
                - section-1
                - level-2

            - name: 1.1.16 Ensure separate partition exists for /var/log/audit
              block:
                - name: 1.1.16 Ensure separate partition exists for /var/log/audit
                  ansible.builtin.command: findmnt /var/log/audit
                  failed_when: audit_1_1_16_result.rc != 1 and audit_1_1_16_result.rc != 0
                  register: audit_1_1_16_result
                  changed_when: true

                - name: 1.1.16 Ensure separate partition exists for /var/log/audit
                  ansible.builtin.debug:
                    msg: "{{ audit_1_1_16_result.stdout_lines }}"
              tags:
                - "1.1.16"
                - section-1
                - level-2

            - name: 1.1.17 Ensure separate partition exists for /home
              block:
                - name: 1.1.17 Ensure separate partition exists for /home
                  ansible.builtin.command: findmnt /home
                  failed_when: audit_1_1_17_result.rc != 1 and audit_1_1_17_result.rc != 0
                  register: audit_1_1_17_result
                  changed_when: true

                - name: 1.1.17 Ensure separate partition exists for /home
                  ansible.builtin.debug:
                    msg: "{{ audit_1_1_17_result.stdout_lines }}"
              tags:
                - "1.1.17"
                - section-1
                - level-2

            - name: 1.1.18 Ensure /home partition includes the nodev option
              block:
                - name: 1.1.18 Ensure /home partition includes the nodev option
                  ansible.builtin.shell: findmnt /home | grep -Ev '\bnodev\b'
                  failed_when: audit_1_1_18_result.rc != 1 and audit_1_1_18_result.rc != 0
                  register: audit_1_1_18_result
                  changed_when: true

                - name: 1.1.18 Ensure /home partition includes the nodev option
                  ansible.builtin.debug:
                    msg: "{{ audit_1_1_18_result.stdout_lines }}"
              tags:
                - "1.1.18"
                - section-1
                - level-2
            - name: 1.1.19 Ensure removable media partitions include noexec option
              block:
                - name: 1.1.19 Ensure removable media partitions include noexec option
                  ansible.builtin.script:
                    cmd: "files/audit_1.1.19.sh"
                  failed_when: audit_1_1_19_result.rc != 1 and audit_1_1_19_result.rc != 0
                  register: audit_1_1_19_result
                  changed_when: true

                - name: 1.1.19 Ensure removable media partitions include noexec option
                  ansible.builtin.debug:
                    msg: "{{ audit_1_1_19_result.stdout_lines }}"
              tags:
                - "1.1.19"
                - section-1
                - level-2
          tags:
            - "1.1.1"
            - section-1
            - level-2
      tags:
        - section-1
        - level-2
        - "1.1"
  tags:
    - "1"
    - section-1
    - level-2

- name: 3 Network Configuration
  block:
    - name: 3.1 Disable unused network protocols and devices
      block:
        - name: 3.1.1 Disable IPv6
          ansible.posix.sysctl:
            name: "{{ item.name }}"
            value: "{{ item.value }}"
            state: present
            reload: true
            sysctl_set: true
            ignoreerrors: true
          loop:
            - { name: net.ipv6.conf.all.disable_ipv6, value: 1 }
            - { name: net.ipv6.conf.default.disable_ipv6, value: 1 }
          #notify: Reload sysctl
          tags:
            - section-3
            - level-2
            - "3.1.1"
      tags:
        - section-3
        - level-2
        - "3.1"

    - name: 3.4 Uncommon Network Protocols
      block:
        - name: 3.4.1 - Ensure DCCP is disabled
          ansible.builtin.lineinfile:
            dest: "{{ cis_modprobe_conf_path }}"
            regexp: "^#?install dccp.*"
            line: "install dccp /bin/true"
            create: true
          tags:
            - section-3
            - level-2
            - "3.4.1"
      tags:
        - section-3
        - level-2
        - "3.4.1"
  tags:
    - section-3
    - level-2
    - "3"

- name: 4 Logging and Auditing
  block:
    - name: 4.1 Configure System Accounting
      block:
        - name: 4.1.1 Ensure auditing is enabled
          block:
            - name: 4.1.1.1 Ensure auditd is installed
              ansible.builtin.package:
                name: "{{ item }}"
                state: present
              loop: [ "audit", "audit-libs" ]
              when:
                - ("'audit' not in ansible_facts.packages")
                - ("'audit-libs' not in ansible_facts.packages")
              tags:
                - section-4
                - level-2
                - "4.1.1.1"

            - name: 4.1.1.2 Ensure auditd service is enabled and running
              ansible.builtin.service:
                name: auditd
                state: started
                enabled: true
              tags:
                - section-4
                - level-2
                - "4.1.1.2"

            - name: 4.1.1.3 Ensure auditing for processes that start prior to auditd is enabled
              block:
                - name: 4.1.1.3 Ensure auditing for processes that start prior to auditd is enabled
                  ansible.builtin.script:
                    cmd: "files/audit_4.1.1.3.sh"
                  register: audit_4_1_1_3

                - name: 4.1.1.3 Ensure auditing for processes that start prior to auditd is enabled
                  ansible.builtin.debug:
                    msg: "{{ audit_4_1_1_3 }}"

                - name: 4.1.1.3 Ensure auditing for processes that start prior to auditd is enabled
                  ansible.builtin.replace:
                    dest: "{{ cis_grub_conf_path }}"
                    regexp: ^(GRUB_CMDLINE_LINUX.*)(?:\")(.+)(?<!audit=1)(?:\")
                    replace: '\1"\2 audit=1"'
                  #notify: Reconfigure GRUB
                  when: ('"PASSED" not in audit_4_1_1_3.stdout')
              tags:
                - section-4
                - level-2
                - "4.1.1.3"
          tags:
            - section-4
            - level-2
            - "4.1.1"

        - name: 4.1.2 Configure Data Retention
          block:
            - name: 4.1.2.1 Ensure audit log storage size is configured
              block:
                - name: 4.1.2.1 Ensure audit log storage size is configured
                  ansible.builtin.command: grep max_log_file "{{ cis_auditd_conf_path }}"
                  register: audit_log_max_size
                  changed_when: true


                - name: 4.1.2.1 Ensure audit log storage size is configured
                  ansible.builtin.debug:
                    var: audit_log_max_size.stdout_lines
              tags:
                - section-4
                - level-2
                - "4.1.2.1"

            - name: 4.1.2.2 Ensure audit logs are not automatically deleted
              block:
                - name: 4.1.2.2 Ensure audit logs are not automatically deleted
                  ansible.builtin.lineinfile:
                    dest: "{{ cis_auditd_conf_path }}"
                    regexp: "^max_log_file_action( |=)"
                    line: "max_log_file_action = {{ cis_auditd['max_log_file_action'] }}"

                - name: 4.1.2.2 Configure | Auditd logrotate.
                  ansible.builtin.template:
                    src: "{{ cis_auditd_logrotate_template }}"
                    dest: "{{ cis_auditd_logrotate_path }}"
                    owner: root
                    group: root
                    mode: 0644
              tags:
                - section-4
                - level-2
                - "4.1.2.2"

            - name: 4.1.2.3 Ensure system is disabled when audit logs are full
              block:
                - name: 4.1.2.3 Ensure system is disabled when audit logs are full
                  ansible.builtin.lineinfile:
                    dest: "{{ cis_auditd_conf_path }}"
                    regexp: "{{ item.regexp }}"
                    line: "{{ item.line }}"
                    create: true
                  loop:
                    - { regexp: "^space_left_action.?=", line: "space_left_action = {{ cis_auditd['space_left_action'] }}" }
                    - { regexp: "^action_mail_acct.?=", line: "action_mail_acct = {{ cis_auditd['action_mail_acct'] }}" }
                    - { regexp: "^admin_space_left_action.?=", line: "admin_space_left_action = {{ cis_auditd['admin_space_left_action'] }}" }
              tags:
                - section-4
                - level-2
                - "4.1.2.3"

            - name: 4.1.2.4 Ensure audit_backlog_limit is sufficient
              block:
                - name: 4.1.2.4 Ensure audit_backlog_limit is sufficient
                  ansible.builtin.script:
                    cmd: "files/audit_4.1.2.4.sh"
                  register: audit_4_1_2_4_result

                - name: 4.1.2.4 Ensure audit_backlog_limit is sufficient
                  ansible.builtin.debug:
                    msg: audit_4_1_2_4_result.stdout_lines

                - name: 4.1.2.4 Ensure audit_backlog_limit is sufficient
                  ansible.builtin.replace:
                    dest: "{{ cis_grub_conf_path }}"
                    regexp: ^(GRUB_CMDLINE_LINUX.*)(?:\")(.+)(?<!audit_backlog_limit=)(?:\")
                    replace: '\1"\2 audit_backlog_limit=8192"'
                  #notify: Reconfigure GRUB
                  when: ('"PASSED:" not in audit_4_1_2_4_result.stdout_lines')
              tags:
                - section-4
                - level-2
                - "4.1.2.4"
          tags:
            - section-4
            - level-2
            - "4.1.2"

        - name: 4.1.3 Ensure events that modify date and time information are collected
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.3 Ensure events that modify date and time information are collected"
            - "-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change"
            - "-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change"
            - "-a always,exit -F arch=b64 -S clock_settime -k time-change"
            - "-a always,exit -F arch=b32 -S clock_settime -k time-change"
            - "-w /etc/localtime -p wa -k time-change"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.3"

        - name: 4.1.4 Ensure events that modify user/group information are collected
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.4 Ensure events that modify user/group information are collected"
            - "-w /etc/group -p wa -k identity"
            - "-w /etc/passwd -p wa -k identity"
            - "-w /etc/gshadow -p wa -k identity"
            - "-w /etc/shadow -p wa -k identity"
            - "-w /etc/security/opasswd -p wa -k identity"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.4"

        - name: 4.1.5 Ensure events that modify the systems network environment are collected
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.5 Ensure events that modify the systems network environment are collected"
            - "-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale"
            - "-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale"
            - "-w /etc/issue -p wa -k system-locale"
            - "-w /etc/issue.net -p wa -k system-locale"
            - "-w /etc/hosts -p wa -k system-locale"
            - "-w /etc/sysconfig/network -p wa -k system-locale"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.5"

        - name: 4.1.6 Ensure events that modify the systems Mandatory Access Controls are collected
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.6 Ensure events that modify the systems Mandatory Access Controls are collected"
            - "-w /etc/selinux/ -p wa -k MAC-policy"
            - "-w /usr/share/selinux/ -p wa -k MAC-policy"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.6"

        - name: 4.1.7 Ensure login and logout events are collected
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.7 Ensure login and logout events are collected"
            - "-w /var/log/lastlog -p wa -k logins"
            - "-w /var/run/faillock/ -p wa -k logins"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.7"

        - name: 4.1.8 Ensure session initiation information is collected
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.8 Ensure session initiation information is collected"
            - "-w /var/run/utmp -p wa -k session"
            - "-w /var/log/wtmp -p wa -k logins"
            - "-w /var/log/btmp -p wa -k logins"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.8"

        - name: 4.1.9 Ensure discretionary access control permission modification events are collected
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.9 Ensure discretionary access control permission modification events are collected"
            - "-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod"
            - "-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod"
            - "-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod"
            - "-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod"
            - "-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod"
            - "-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.9"

        - name: 4.1.10 Ensure unsuccessful unauthorized file access attempts are collected
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.10 Ensure unsuccessful unauthorized file access attempts are collected"
            - "-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access"
            - "-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access"
            - "-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access"
            - "-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.10"

        - name: 4.1.11 Ensure use of privileged commands is collected
          block:
            - name: 4.1.11 Ensure use of privileged commands is collected
              ansible.builtin.command: find / -xdev \( -perm -4000 -o -perm -2000 \) -type f
              register: privileged_binaries
              changed_when: true

            - name: 4.1.11 Ensure use of privileged commands is collected
              ansible.builtin.lineinfile:
                dest: "{{ cis_audit_rules_path }}"
                insertafter: EOF
                line: "-a always,exit -F path={{ item }} -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged"
              loop: "{{ privileged_binaries.stdout_lines }}"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.11"

        - name: 4.1.12 Ensure successful file system mounts are collected
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.12 Ensure successful file system mounts are collectedd"
            - "-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts"
            - "-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.12"

        - name: 4.1.13 Ensure file deletion events by users are collected
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.13 Ensure file deletion events by users are collected"
            - "-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete"
            - "-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.13"

        - name: 4.1.14 Ensure changes to system administration scope (sudoers) is collected
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.14 Ensure changes to system administration scope (sudoers) is collected"
            - "-w /etc/sudoers -p wa -k scope"
            - "-w /etc/sudoers.d/ -p wa -k scope"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.14"

        - name: 4.1.15 Ensure system administrator command executions (sudo) are collected
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.15 Ensure system administrator command executions (sudo) are collected"
            - "-a always,exit -F arch=b64 -C euid!=uid -F euid=0 -F auid>=1000 -F auid!=4294967295 -S execve -k actions"
            - "-a always,exit -F arch=b32 -C euid!=uid -F euid=0 -F auid>=1000 -F auid!=4294967295 -S execve -k actions"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.15"

        - name: 4.1.16 Ensure kernel module loading and unloading is collected
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.16 Ensure kernel module loading and unloading is collected"
            - "-w /sbin/insmod -p x -k modules"
            - "-w /sbin/rmmod -p x -k modules"
            - "-w /sbin/modprobe -p x -k modules"
            - "-a always,exit -F arch=b64 -S init_module -S delete_module -k modules"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.16"

        - name: 4.1.17 Ensure the audit configuration is immutable
          ansible.builtin.lineinfile:
            dest: "{{ cis_audit_rules_path }}"
            line: "{{ item }}"
          loop:
            - "# 4.1.17 Ensure the audit configuration is immutable"
            - "-e 2"
          #notify: Generate auditd rules
          tags:
            - section-4
            - level-2
            - "4.1.17"
      #notify:
        - Restart auditd
        - Reload systemd
      tags:
        - section-4
        - level-2
        - "4.1"
  tags:
    - section-4
    - level-2
    - "4"

- name: 6 System Maintenance
  block:
    - name: 6.1 System File Permissions
      block:
        - name: 6.1.1 Audit system file permissions
          ansible.builtin.command:
            cmd: "rpm -Va --nomtime --nosize --nomd5 --nolinkto"
            strip_empty_ends: true
          register: audit_6_1_1_result
          failed_when: audit_6_1_1_result.rc != 1 and audit_6_1_1_result.rc != 0
          changed_when: true
          args:
            warn: false

        - name: 6.1.1 Audit system file permissions
          ansible.builtin.debug:
            msg:
              - "Investigate the results to ensure any discrepancies found are understood and support proper secure operation of the system:"
              - "{{ audit_6_1_1_result.stdout_lines }}"
      tags:
        - section-6
        - level-2
        - "6.1.1"
  tags:
    - section-6
    - level-2
    - "6"
