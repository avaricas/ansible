---
- name: Install | Fail2ban.
  block:
    - name: Install Fail2ban.
      ansible.builtin.package:
        name: "{{ package_list['fail2ban'] }}"
        state: present

    - name: Enable | Fail2ban
      ansible.builtin.service:
        name: fail2ban
        enabled: true

    - name: Start | Fail2ban.
      ansible.builtin.service:
        name: fail2ban
        state: started

    - name: Configure | Fail2ban | Asterisk config.
      block:
        - name: Copy | Fail2ban jail.conf.
          ansible.builtin.copy:
            src: "{{ jail_conf_template }}"
            dest: "{{ jail_conf_path }}"

        - name: Copy | Fail2ban fail2ban.conf.
          ansible.builtin.copy:
            src: "{{ fail2ban_conf_template }}"
            dest: "{{ fail2ban_conf_path }}"
      notify: [ "Restart Fail2ban" ]
      tags: [ "role::extras:fail2ban_configure" ]

    - name: Configure | Fail2ban | Asterisk config.
      block:
        - name: Copy | Asterisk conf file.
          ansible.builtin.copy:
            src: "{{ fail2ban_asterisk_conf_template }}"
            dest: "{{ fail2ban_asterisk_conf_path }}"

        - name: Configure | Asterisk logger.conf.
          ansible.builtin.lineinfile:
            path: "{{ asterisk_logger_conf_path }}"
            state: present
            insertafter: "^full"
            line: "secure => security,notice"
          ignore_errors: true

        - name: Check | Asterisk modules.
          ansible.builtin.command: asterisk -rx 'logger reload'
          changed_when: true
      notify: [ "Restart Fail2ban" ]
      tags: [ "role::extras:fail2ban_configure_asterisk" ]

    - name: Configure | Fail2ban | FirewallD.
      block:
        - name: Configure | FirewallD.
          ansible.builtin.service:
            name: firewalld
            enabled: false
            state: stopped
      tags: [ "role::extras:fail2ban_configure_firewalld" ]

    - name: Configure | Fail2ban Logs.
      block:
        - name: Configure | Fail2ban Log directory.
          ansible.builtin.file:
            path: "{{ fail2ban_log_dir }}"
            state: directory
            owner: root
            group: root
            mode: 0755
          tags: [ "role::extras:fail2ban_configure_logrotate" ]

        - name: Configure | Fail2ban Logrotate.
          ansible.builtin.template:
            src: "{{ fail2ban_logrotate_template }}"
            dest: "{{ fail2ban_logrotate_path }}"
            owner: root
            group: root
            mode: 0644
          tags: [ "role::extras:fail2ban_configure_logrotate" ]
  when: (tools.fail2ban | default({}, false))
